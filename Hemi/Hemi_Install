#!/bin/bash

# Цвета текста
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # Сброс цвета

# Проверка наличия Docker и Docker Compose
if ! command -v docker &> /dev/null; then
    echo -e "${RED}Ошибка: Docker не установлен.${NC}"
    exit 1
fi

if ! docker compose version &> /dev/null; then
    echo -e "${YELLOW}Docker Compose не найден. Устанавливаем...${NC}"
    sudo apt update && sudo apt install -y docker-compose-plugin
    if ! docker compose version &> /dev/null; then
        echo -e "${RED}Ошибка: Не удалось установить Docker Compose.${NC}"
        exit 1
    fi
fi

# Проверка наличия контейнера Hemi
if [ $(docker ps -a -q -f name=Hemi | wc -l) -gt 0 ]; then
    echo -e "${YELLOW}Контейнер Hemi уже существует.${NC}"
    read -p "Хотите удалить существующий контейнер и установить новый? (y/n): " CONFIRM
    if [ "$CONFIRM" != "y" ]; then
        echo -e "${RED}Операция отменена пользователем.${NC}"
        exit 1
    fi

    echo -e "${YELLOW}Останавливаем и удаляем контейнер Hemi...${NC}"
    docker compose stop hemi
    docker compose rm -f hemi
    docker rmi hemi-hemi --force
    echo -e "${GREEN}Контейнер и образ Hemi успешно удалены.${NC}"
fi

# Прямая ссылка на бинарник
BINARY_URL="https://github.com/hemilabs/heminetwork/releases/download/v0.8.0/heminetwork_v0.8.0_linux_amd64.tar.gz"

# Ввод переменных
read -p "Введите приватный ключ (оставьте пустым для генерации нового) (POPM_BTC_PRIVKEY): " PRIV_KEY
read -p "Укажите желаемый размер комиссии (минимум 50) (POPM_STATIC_FEE): " FEE

# Проверка минимального значения комиссии
if [ "$FEE" -lt 50 ]; then
    echo -e "${RED}Ошибка: комиссия должна быть не меньше 50!${NC}"
    exit 1
fi

# Если приватный ключ не указан, генерируем новый
if [ -z "$PRIV_KEY" ]; then
    echo -e "${YELLOW}Приватный ключ не указан. Генерация нового ключа...${NC}"

    # Создание временного Dockerfile для генерации ключа
    cat <<EOT > Dockerfile
FROM ubuntu:22.04

RUN apt-get update && apt-get install -y wget tar bash jq && rm -rf /var/lib/apt/lists/*
WORKDIR /app

RUN wget -O heminetwork_linux_amd64.tar.gz "$BINARY_URL" && \
    tar --strip-components=1 -xzvf heminetwork_linux_amd64.tar.gz && \
    rm heminetwork_linux_amd64.tar.gz

CMD ["/app/keygen", "-secp256k1", "-json", "-net=testnet"]
EOT

    # Сборка и запуск временного контейнера
    docker build -t hemi-keygen .
    docker run --rm hemi-keygen > popm-address.json

    if [ ! -f "popm-address.json" ]; then
        echo -e "${RED}Ошибка: файл popm-address.json не создан.${NC}"
        exit 1
    fi

    PRIV_KEY=$(jq -r '.private_key' popm-address.json)
    PUBKEY_HASH=$(jq -r '.pubkey_hash' popm-address.json)

    echo -e "${GREEN}Новый ключ сгенерирован!${NC}"
    echo -e "${YELLOW}Ваш pubkey_hash (BTC адрес): $PUBKEY_HASH${NC}"
    echo -e "${YELLOW}Ваш приватный ключ: $PRIV_KEY${NC}"
    echo -e "${YELLOW}Сохраните файл popm-address.json для дальнейшего использования.${NC}"
fi

# Создание .env
cat <<EOT > .env
POPM_BTC_PRIVKEY=$PRIV_KEY
POPM_STATIC_FEE=$FEE
POPM_BFG_URL=wss://testnet.rpc.hemi.network/v1/ws/public
EOT
echo -e "${GREEN}.env файл создан.${NC}"

# Восстановление Dockerfile для запуска popmd
cat <<EOT > Dockerfile
FROM ubuntu:22.04

RUN apt-get update && apt-get install -y wget tar bash jq && rm -rf /var/lib/apt/lists/*
WORKDIR /app

RUN wget -O heminetwork_linux_amd64.tar.gz "$BINARY_URL" && \
    tar --strip-components=1 -xzvf heminetwork_linux_amd64.tar.gz && \
    rm heminetwork_linux_amd64.tar.gz

CMD ["/app/popmd"]
EOT

# Запуск контейнера
echo -e "${YELLOW}Устанавливаем контейнер Hemi...${NC}"
docker compose up -d --build

# Проверка статуса контейнера
if [ $(docker ps -q -f name=Hemi | wc -l) -gt 0 ]; then
    echo -e "${GREEN}Контейнер Hemi успешно запущен!${NC}"
    docker logs -f Hemi
else
    echo -e "${RED}Ошибка: контейнер Hemi не запущен.${NC}"
    exit 1
fi
