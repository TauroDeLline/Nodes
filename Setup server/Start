#!/usr/bin/env bash

set -e

export DEBIAN_FRONTEND=noninteractive

# Цвета для вывода
GREEN='\033[0;32m'
NC='\033[0m'

echo -e "${GREEN}Начинаем обновление системы и установку Docker...${NC}"

# Настройки для автоматического перезапуска сервисов
sudo mkdir -p /etc/apt/apt.conf.d/
echo 'DPkg::options {"--force-confdef"; "--force-confold";}' | sudo tee /etc/apt/apt.conf.d/90force-conf
sudo tee /etc/needrestart/needrestart.conf > /dev/null <<EOF
# Отключаем запросы needrestart
$nrconf{restart} = 'a';
EOF

# Обновляем систему
sudo apt update -y
sudo apt full-upgrade -y
sudo apt autoremove -y
sudo apt install -y --no-install-recommends apt-transport-https ca-certificates curl software-properties-common gnupg dbus

# Удаляем файл ключа Docker, если он существует, чтобы избежать интерактивного запроса
if [ -f /usr/share/keyrings/docker-archive-keyring.gpg ]; then
    sudo rm -f /usr/share/keyrings/docker-archive-keyring.gpg
fi

# Загружаем ключ Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Добавляем репозиторий Docker
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Устанавливаем Docker
sudo apt update -y
sudo apt install -y docker-ce docker-ce-cli containerd.io

# Запускаем и включаем Docker
sudo systemctl start docker
sudo systemctl enable docker

# Устанавливаем Docker Compose
DOCKER_COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# Проверяем Docker Compose
docker-compose --version

echo -e "${GREEN}Docker и Docker Compose успешно установлены!${NC}"

# Установка node_exporter
echo -e "${GREEN}Устанавливаем node_exporter...${NC}"
cd /tmp
wget https://github.com/prometheus/node_exporter/releases/download/v1.2.0/node_exporter-1.2.0.linux-amd64.tar.gz
tar xvf node_exporter-1.2.0.linux-amd64.tar.gz
sudo mv node_exporter-1.2.0.linux-amd64/node_exporter /usr/bin/
rm -rf node_exporter-1.2.0.linux-amd64*

# Создаём systemd-сервис для node_exporter
sudo tee /etc/systemd/system/exporterd.service > /dev/null <<EOF
[Unit]
Description=Prometheus Node Exporter
After=network-online.target
[Service]
User=$USER
ExecStart=/usr/bin/node_exporter
Restart=always
RestartSec=3
LimitNOFILE=65535
[Install]
WantedBy=multi-user.target
EOF

# Запускаем и включаем node_exporter
sudo systemctl daemon-reload
sudo systemctl enable exporterd
sudo systemctl start exporterd

# Открываем порт 9100
sudo ufw allow 9100 || echo "Firewall не установлен, пропускаем настройку портов."

echo -e "${GREEN}node_exporter установлен и запущен!${NC}"

# Завершаем работу
echo -e "${GREEN}Все операции завершены. Система перезагружается...${NC}"
sudo reboot
