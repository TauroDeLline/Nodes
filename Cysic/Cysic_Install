#!/bin/bash

# Имя контейнера
container_name="Sonaric"

# Образ Docker
image_version="ubuntu:22.04"

# Функция для проверки доступности порта
check_port() {
  local port=$1
  if lsof -i:"$port" >/dev/null 2>&1; then
    return 1 # Порт занят
  else
    return 0 # Порт свободен
  fi
}

# Определение свободного порта, начиная с 8080
container_port=8080
while ! check_port "$container_port"; do
  echo "Порт $container_port уже занят. Проверяем следующий..."
  container_port=$((container_port + 1))
done

echo "Выбран порт: $container_port"

# Проверка, существует ли контейнер с таким именем
if docker ps -a -q -f name="^${container_name}$" >/dev/null; then
  echo "Контейнер с именем $container_name уже существует. Перезапускаем его..."
  docker stop $container_name >/dev/null 2>&1
  docker rm $container_name >/dev/null 2>&1
fi

# Создание и запуск контейнера
log_file="/tmp/sonaric_install.log"
echo "Создаем и запускаем контейнер..."
docker run -dit --name $container_name -p $container_port:$container_port \
  -e TERM=xterm $image_version sh -c "set -x && \
  DEBIAN_FRONTEND=noninteractive apt-get update && \
  apt-get install -f -y && \
  dpkg --configure -a && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apt-utils curl wget gnupg2 && \
  apt-get clean && \
  echo 'Checking environment...' && \
  ls -la /var/lib/sonaricd/ || echo 'Directory /var/lib/sonaricd does not exist' && \
  ps aux | grep sonaricd || echo 'sonaricd process not found' && \
  curl -fsSL https://get.sonaric.xyz/scripts/install.sh | bash -x | tee $log_file && \
  echo 'Checking sonaricd status after installation...' && \
  ls -la /var/lib/sonaricd/ && \
  ps aux | grep sonaricd && \
  sonaricd start || echo 'Failed to start sonaricd' && \
  sleep 5 && \
  echo 'Sonaric setup complete.'"

# Проверка работы контейнера
if docker ps -q -f name="^${container_name}$" >/dev/null; then
  echo "Контейнер $container_name успешно запущен."
else
  echo "Ошибка: контейнер $container_name не запущен."
fi

# Лог после завершения
if [ -f "$log_file" ]; then
  echo "Лог установки сохранен в $log_file."
else
  echo "Лог установки не найден."
fi
