#!/bin/bash
#
# install_cysic_node.sh
#
# Скрипт для развёртывания «cysic-verifier» ноды на Ubuntu 22 (от root).
# Адрес кошелька прописан жёстко внутри скрипта.
# Usage: ./install_cysic_node.sh
#

set -euo pipefail

### 1) Переменные
WALLET_ADDR="0xc80be27Ab3565C5354247Ff1953E1e89faDA1336"
SETUP_URL="https://github.com/cysic-labs/cysic-phase3/releases/download/v1.0.0/setup_linux.sh"
SETUP_PATH="/root/setup_linux.sh"
SERVICE_NAME="cysic-verifier"
SERVICE_FILE="/etc/systemd/system/${SERVICE_NAME}.service"
NODE_DIR="/root/cysic-verifier"
LOG_FILE="/var/log/${SERVICE_NAME}.log"

### 2) Шаг 1: Скачиваем setup_linux.sh и делаем его исполняемым
echo ">>> Скачиваем и готовим setup_linux.sh..."
mkdir -p /root
curl -L "${SETUP_URL}" -o "${SETUP_PATH}"
chmod +x "${SETUP_PATH}"

### 3) Шаг 2: Запускаем установку ноды
echo ">>> Запускаем установку ноды: bash ${SETUP_PATH} ${WALLET_ADDR} ..."
bash "${SETUP_PATH}" "${WALLET_ADDR}"
# После этого в /root должна появиться папка cysic-verifier с start.sh внутри.

if [ ! -d "${NODE_DIR}" ] || [ ! -x "${NODE_DIR}/start.sh" ]; then
  echo "Ошибка: не удалось найти ${NODE_DIR}/start.sh после запуска setup_linux.sh"
  exit 1
fi

### 4) Шаг 3: Создаём файл лога и настраиваем права
echo ">>> Настраиваем лог-файл ${LOG_FILE}..."
touch "${LOG_FILE}"
chmod 644 "${LOG_FILE}"

### 5) Шаг 4: Формируем systemd unit-файл
echo ">>> Пишем unit-файл в ${SERVICE_FILE}..."
cat > "${SERVICE_FILE}" <<EOF
[Unit]
Description=Cysic Verifier Node Service
After=network.target

[Service]
# Запуск от root
WorkingDirectory=${NODE_DIR}
ExecStart=/bin/bash ${NODE_DIR}/start.sh
Restart=on-failure
RestartSec=5s

# Перенаправляем stdout/stderr в лог-файл
StandardOutput=append:${LOG_FILE}
StandardError=append:${LOG_FILE}

[Install]
WantedBy=multi-user.target
EOF

### 6) Шаг 5: Перезагружаем конфигурацию systemd, включаем автозапуск и стартуем сервис
echo ">>> Перезагружаем systemd, включаем и запускаем сервис..."
systemctl daemon-reload
systemctl enable "${SERVICE_NAME}.service"
systemctl start  "${SERVICE_NAME}.service"

### 7) Шаг 6: Проверяем, что сервис запущен
sleep 1
if systemctl is-active --quiet "${SERVICE_NAME}.service"; then
  echo "✔ Сервис ${SERVICE_NAME} успешно запущен и работает в фоне."
  echo "  Логи: tail -f ${LOG_FILE}"
  echo "  Или: journalctl -u ${SERVICE_NAME}.service -n 100 -f"
else
  echo "✖ Сервис ${SERVICE_NAME} не запустился. Проверьте статус:"
  echo "    systemctl status ${SERVICE_NAME}.service"
  exit 1
fi

exit 0
