#!/bin/bash

set -e
echo "=== Rivalz Node Deployment Script ==="

NODE_NAME="Rivalz"
IMAGE_NAME="rivalz-node-image"
BUILD_DIR="./rivalz-node"

# Create build directory
mkdir -p $BUILD_DIR

# Create Dockerfile
cat > $BUILD_DIR/Dockerfile <<EOF
FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y curl gnupg2 supervisor \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g rivalz-node-cli \
    && apt-get clean

WORKDIR /app

# Add supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY rivalz.conf /etc/supervisor/conf.d/rivalz.conf

CMD ["supervisord", "-c", "/etc/supervisor/supervisord.conf"]
EOF

# Create supervisor configuration file
cat > $BUILD_DIR/rivalz.conf <<EOF
[program:rivalz]
command=rivalz run
autostart=true
autorestart=true
stdout_logfile=/app/node.log
stderr_logfile=/app/node.log
EOF

echo "Dockerfile и конфигурация supervisor созданы успешно."

# Build Docker image
docker build -t $IMAGE_NAME $BUILD_DIR

# Remove existing container if it exists
if [ "$(docker ps -aq -f name=^${NODE_NAME}$)" ]; then
    docker rm -f $NODE_NAME
fi

# Run container with restart policy
docker run -d \
    --name $NODE_NAME \
    --restart unless-stopped \
    -v $BUILD_DIR/app:/app \
    -p 3000:3000 \
    $IMAGE_NAME

echo "=== Развертывание Завершено ==="
echo "Просмотр логов. Для выхода нажмите Ctrl+C."
docker logs -f $NODE_NAME
