#!/bin/bash

# Rivalz Node Installation Script

# Exit immediately if a command exits with a non-zero status
set -e

# Function to prompt for input with validation
prompt_input() {
    local prompt_message=$1
    local var_name=$2
    local input

    while true; do
        read -p "$prompt_message: " input
        if [ -z "$input" ]; then
            echo "Значение не может быть пустым. Пожалуйста, попробуйте снова."
        else
            export $var_name="$input"
            break
        fi
    done
}

# 1. Запрос необходимых переменных
echo "=== Установка Rivalz Node ==="

prompt_input "Введите ваш адрес кошелька" WALLET_ADDRESS
prompt_input "Введите размер диска (например, 100G)" DISK_SIZE

# 2. Создание директории для установки
INSTALL_DIR="./Rivalz"

if [ -d "$INSTALL_DIR" ]; then
    echo "Директория $INSTALL_DIR уже существует. Продолжаем установку."
else
    mkdir -p "$INSTALL_DIR"
    echo "Создана директория $INSTALL_DIR."
fi

cd "$INSTALL_DIR"

# 3. Создание Dockerfile
cat > Dockerfile <<EOF
FROM ubuntu:22.04

# Установка зависимостей
RUN apt-get update && apt-get install -y \\
    curl \\
    bash \\
    nodejs \\
    npm \\
    && rm -rf /var/lib/apt/lists/*

# Установка rivalz-node-cli глобально
RUN npm install -g rivalz-node-cli

# Установка PS1
ENV PS1="[Rivalz] \w\$ "

# Создание рабочей директории
WORKDIR /app

# Копирование entrypoint.sh
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

# Установка точки входа
ENTRYPOINT ["/entrypoint.sh"]
EOF

echo "Dockerfile создан."

# 4. Создание entrypoint.sh
cat > entrypoint.sh <<'EOF'
#!/bin/bash

# Функция для перезапуска ноды при сбое
run_node() {
    while true; do
        # Запуск rivalz run с передачей входных данных
        echo -e "$WALLET_ADDRESS\n\n$DISK_SIZE" | rivalz run 2>&1 | tee /app/rivalz.log
        echo "rivalz run завершился с кодом $? Перезапуск через 5 секунд..."
        sleep 5
    done
}

# Запуск функции
run_node
EOF

echo "entrypoint.sh создан."

# 5. Построение Docker образа
IMAGE_NAME="rivalz-node"
docker build -t $IMAGE_NAME .

echo "Docker образ $IMAGE_NAME успешно построен."

# 6. Запуск Docker контейнера
CONTAINER_NAME="Rivalz"

# Проверка, запущен ли уже контейнер с таким именем
if [ "$(docker ps -aq -f name=^/${CONTAINER_NAME}$)" ]; then
    echo "Контейнер с именем $CONTAINER_NAME уже существует. Перезапускаем его."
    docker rm -f $CONTAINER_NAME
fi

docker run -d \
    --name $CONTAINER_NAME \
    --restart=always \
    -e WALLET_ADDRESS="$WALLET_ADDRESS" \
    -e DISK_SIZE="$DISK_SIZE" \
    $IMAGE_NAME

echo "Контейнер $CONTAINER_NAME запущен и настроен на автоматический перезапуск."

# 7. Финальные инструкции
echo "Установка и запуск ноды Rivalz завершены успешно."
echo "Вы можете проверить логи с хоста с помощью команды:"
echo "  docker logs -f $CONTAINER_NAME"
echo "Чтобы зайти в контейнер, используйте команду:"
echo "  docker exec -it $CONTAINER_NAME bash"
echo "Чтобы проверить логи внутри контейнера, используйте команду:"
echo "  tail -f /app/rivalz.log"
echo "Для отсоединения от просмотра логов без остановки ноды нажмите Ctrl+C."
