#!/bin/bash

# Rivalz Node Installation Script

# Exit immediately if a command exits with a non-zero status
set -e

# 1. Создание директории для установки
INSTALL_DIR="./Rivalz"

if [ -d "$INSTALL_DIR" ]; then
    echo "Директория $INSTALL_DIR уже существует. Продолжаем установку."
else
    mkdir -p "$INSTALL_DIR"
    echo "Создана директория $INSTALL_DIR."
fi

cd "$INSTALL_DIR"

# 2. Создание Dockerfile
cat > Dockerfile <<EOF
FROM ubuntu:22.04

# Установка зависимостей
RUN apt-get update && apt-get install -y \\
    curl \\
    bash \\
    gnupg \\
    && rm -rf /var/lib/apt/lists/*

# Установка Node.js 18.x из NodeSource
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \\
    apt-get install -y nodejs

# Установка rivalz-node-cli глобально
RUN npm install -g rivalz-node-cli

# Установка PS1 для отображения имени контейнера в приглашении
ENV PS1="[Rivalz] \w\$ "

# Создание рабочей директории
WORKDIR /app

# Установка точки входа на стартовый скрипт
COPY start_node.sh /start_node.sh
RUN chmod +x /start_node.sh

ENTRYPOINT ["/start_node.sh"]
EOF

echo "Dockerfile создан."

# 3. Создание стартового скрипта start_node.sh
cat > start_node.sh <<'EOF'
#!/bin/bash

# Проверка наличия необходимых переменных окружения
if [ -z "$WALLET_ADDRESS" ] || [ -z "$DISK_SIZE" ]; then
    echo "Ошибка: Переменные WALLET_ADDRESS и DISK_SIZE должны быть установлены."
    exit 1
fi

# Запуск ноды Rivalz
rivalz run
EOF

echo "start_node.sh создан."

# 4. Построение Docker образа без использования кэша
IMAGE_NAME="Rivalz-node"
docker build --no-cache -t $IMAGE_NAME .

echo "Docker образ $IMAGE_NAME успешно построен."

# 5. Запуск Docker контейнера
CONTAINER_NAME="Rivalz"

# Проверка, существует ли уже контейнер с таким именем
if [ "$(docker ps -aq -f name=^/${CONTAINER_NAME}$)" ]; then
    echo "Контейнер с именем $CONTAINER_NAME уже существует. Перезапускаем его."
    docker rm -f $CONTAINER_NAME
fi

docker run -d \
    --name $CONTAINER_NAME \
    --restart=always \
    -e WALLET_ADDRESS="your_wallet_address_here" \
    -e DISK_SIZE="your_disk_size_here" \
    $IMAGE_NAME

echo "Контейнер $CONTAINER_NAME запущен и настроен на автоматический перезапуск."

# 6. Финальные инструкции
echo "Установка и запуск ноды Rivalz завершены успешно."
echo ""
echo "Для запуска ноды выполните следующие шаги:"
echo "1. Подключитесь к контейнеру:"
echo "   docker exec -it $CONTAINER_NAME bash"
echo "2. Внутри контейнера запустите команду:"
echo "   rivalz run"
echo "   - Введите ваш адрес кошелька и нажмите Enter."
echo "   - Нажмите Enter для выбора диска по умолчанию."
echo "   - Введите объем диска и нажмите Enter."
echo ""
echo "Вы можете проверить логи с хоста с помощью команды:"
echo "  docker logs -f $CONTAINER_NAME"
echo "Чтобы отсоединиться от просмотра логов без остановки ноды нажмите Ctrl+C."
