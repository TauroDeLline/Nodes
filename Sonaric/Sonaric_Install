#!/bin/bash

# Цвета текста
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # Сброс цвета

# Функция проверки доступности порта
find_free_port() {
    local port=$1
    while lsof -i:$port > /dev/null 2>&1; do
        ((port++))
    done
    echo $port
}

# Имя контейнера
CONTAINER_NAME="sonaric"

# Проверка существующего контейнера
if [ $(docker ps -a --filter "name=^/$CONTAINER_NAME$" --format '{{.Names}}') ]; then
    read -p "Контейнер $CONTAINER_NAME уже существует. Удалить его? (y/n): " REMOVE_CONTAINER
    if [[ $REMOVE_CONTAINER == "y" || $REMOVE_CONTAINER == "Y" ]]; then
        echo -e "${YELLOW}Удаляем существующий контейнер...${NC}"
        docker rm -f $CONTAINER_NAME
    else
        echo -e "${RED}Операция прервана. Удалите контейнер вручную и повторите попытку.${NC}"
        exit 1
    fi
fi

DEFAULT_PORT=8080
NODE_PORT=$(find_free_port $DEFAULT_PORT)

# Создание Dockerfile
cat > Dockerfile <<EOL
FROM ubuntu:22.04

# Установка зависимостей
ENV DEBIAN_FRONTEND=noninteractive
ENV TERM=dumb
RUN apt-get update && \
    apt-get install -y tzdata curl git jq build-essential gcc unzip wget lz4 && \
    ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Копируем установочный скрипт
WORKDIR /root
COPY install.sh /root/install.sh

# Автоматическая установка без интерактивного ввода
RUN chmod +x /root/install.sh && \
    /bin/bash -c "/root/install.sh --unattended || echo \"Ошибка установки\""

# Открытие порта
EXPOSE 8080

# Запуск bash для ручной настройки
CMD ["/bin/bash"]
EOL

# Скачиваем установочный скрипт
curl -fsSL http://get.sonaric.xyz/scripts/install.sh -o install.sh
chmod +x install.sh

# Создание docker-compose.yml
cat > docker-compose.yml <<EOL
version: '3.8'
services:
  sonaric:
    build: .
    container_name: sonaric
    ports:
      - "$NODE_PORT:8080"
    restart: unless-stopped
    tty: true
EOL

# Сборка контейнера
echo -e "${BLUE}Собираем Docker-образ...${NC}"
docker-compose build

# Запуск контейнера
echo -e "${BLUE}Запускаем контейнер...${NC}"
docker-compose up -d

# Проверка состояния контейнера
if [ $? -eq 0 ]; then
    echo -e "${GREEN}Контейнер $CONTAINER_NAME успешно запущен.${NC}"
    echo -e "${YELLOW}Используйте команду 'docker exec -it $CONTAINER_NAME bash' для входа в контейнер.${NC}"
else
    echo -e "${RED}Ошибка при запуске контейнера.${NC}"
    exit 1
fi
